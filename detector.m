function []=detector(action)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  detector.m                                                       %
%  Date: 10/31/2005                                                 %
%  Version: 3.4.1                                                   %
%  Authors:  Matthew K. Emsley                                      %
%            John W. Graff                                          %
%            Gokhan Ulu                                             %
%            Rachel Kaplan                                          %
%                                                                   %
%  Updates:                                                         %
%            v3.41 10/31/2005 Changes to modify thickness of       %
%            non active layers                                      %
%            v3.40 07/02/2002                                       %
%                                                                   %
%            v3.30 05/04/2001  Simplification of file path          %
%            determination using built in Matlab functions          %
%            FILEPARTS and FULLFILE, to insure proper subroutine    %
%            selection if path is not set correctly by user.        %
%            Addition of structure path to set of saved values, as  %
%            revamp of saved values file look up to include strings %
%            which is required for structure path.  Addition of new %
%            subroutine LFOSR_EDIT.m for editing default GUI values %
%            for fonts, colors, and figure sizes.                   %
%                                                                   %
%            v3.20 03/13/2001  Massive update to program exectution %
%            and data output, total revamp of subroutines and the   %
%            addition of adjustbars to plots.  Also fixed bug that  %
%            disabled multiple instances of program from running by %
%            GCBF to FINDOBJ command related to TAG.  Fix of        %
%            uicontrol positions to normalized to allow for         %
%            figure resizing.  Addition of WAITBAR to inform user   %
%            of program execution progress.  Addition of code for   %
%            MATLAB version information to support MATLAB versions  %
%            5.0 and greater.  Also found bug in MATLAB R12 version %
%            6.0 that cause general protection fault due to setting %
%            FIGURE 'HITTEST' property to 'OFF', so I disabled this %
%            setting.                                               %
%                                                                   %
%            v3.14 02/13/2001  Fixed bug with figure handle         %
%            visibility that allowed commands from the prompt to    %
%            be displayed on top of the figure interface.  Also     %
%            fixed path selection to query mfilename instead of     %
%            hard coded string string.   Added option for plotting  %
%            versus energy.  also added button for view info screen %
%            added abitlity to save gui settings                    %
%                                                                   %
%            v3.13 02/09/2001  Fixed bug with figure handle         %
%            visibility that allowed commands from the prompt to    %
%            be displayed on top of the film.m interface.  Also     %
%            fixed path selection to query mfilename instead of     %
%            hard coded string string.                              %
%                                                                   %
%            v3.12 02/06/2001  Added option for plotting versus     %
%            energy.  also added button for view info screen        %
%                                                                   %
%            v3.11 06/15/2000  Addition of layer sweep to program   %
%            now you can sweep single layer thickenss               %
%                                                                   %
%            v3.1 05/18/2000  Update to gui structure, program      %
%            now runs as independent gui and frees the matlab       %
%            window                                                 %
%                                                                   %
%            v3.0 04/22/2000  Massive update to QuantumEffTM,       %
%            QuatnumEffTE, ReflectionTM, ReflectionTE,              %
%            n_index routines allowing matrix input                 %
%            for theta and lambda individually                      %
%                                                                   %
%            v2.0 12/16/1999                                        %
%            Modified Structure File and opening routine            %
%            so anything after                                      %
%            '<-- Top -->' is scanned                               %
%                                                                   %
%            v1.0 4/29/1999                                         %
%            Original version                                       %
%                                                                   %
%  Description:  detector.m calculates the reflection and           %
%                quantum efficiency from a layered structure        %
%                using film scattering matrix calculations.         %
%                                                                   %
%  Supporting Files:  exportfig.m - converts plot to jpeg or eps    %
%                     detector_routine.m - kernel for calc and plot %
%                     n_index.m - calculates index of materials     %
%                     QuantumEffTE.m - kernel for TE calc QE        %
%                     QuantumEffTM.m - kernel for TM calc QE        %
%                     ReflectionTE.m - kernel for TE calc R,T,P     %
%                     ReflectionTM.m - kernel for TM calc R,T,P     %
%                     save_figure.m - saves figure to image file    %
%                     save_file.m - saves data from plot to txt     %
%                     structure_read.m - read structure file input  %
%                     detector_defaults.com - gui defaults          %
%                     structure.txt - default layer structure file  %
%                     ..\index_data\*.kkk - k data of material      %
%                     ..\index_data\*.nnn - n data of material      %
%                                                                   %
%  Inputs:  action == control input (eval,close,info,intialize,save)%
%                                                                   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
LFOSRVersion=3.41;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%% PROGRAM INPUT CONTROL %%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if nargin < 1
    action = 'initialize';
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%% END PROGRAM INPUT CONTROL %%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%% INITIALIZE PROGRAM INTERFACE %%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if strcmp(action,'initialize')

    %
    % Display user option selection
    %
    disp(['LFOSR Detector Routine Version ',num2str(LFOSRVersion)])
    disp(' User Option Selection')
    disp('  1 - Standard Option (default)')
    disp('  2 - Peak Quantum Efficiency')
    disp('  3 - Solar Option')
    disp('  4 - Non-polarized Light Source')
    disp('  5 - Photon to Bits PDA')
    disp('  6 - Monochromator Test')
    disp(' ')
    user_option=input('Please select User Option (1 - default)-> ','s');

    %
    % If nothing is entered 1 is assumed as default
    %
    if isempty(user_option)
        user_option='1';
    end

    %
    % This allows users to enter "exit, quit, or q" to quit the LFOSR routine
    %   all other text entrys result in error
    %
    if ischar(user_option) && (strcmp(user_option,'quit')||strcmp(user_option,'q')||strcmp(user_option,'exit'))
        return
    elseif ischar(user_option) && isempty(str2double(user_option))
        error('Invalide User Option Entry')
    end

    user_option=str2double(user_option); %converts to number for option check

    %
    % This is the option selection to resolve user input to avaiable options
    %
    if user_option==1
        user_selection='none';
        user_run=0;
    elseif user_option==2
        user_selection='peakqeff';
        user_run=1;
    elseif user_option==3
        user_selection='solar';
        user_run=1;
    elseif user_option==4
        user_selection='nonpolarized';
        user_run=1;
    elseif user_option==5
        user_selection='pda';
        user_run=1;
    elseif user_option==6
        user_selection='mono';
        user_run=1;
    else
        error('Incorrect User Option')
    end

    %%%%%%%%%%%%%%%%% SUBROUTINE PATH INPUT %%%%%%%%%%%%%%%%%%%%%%%%%%%%
    [path,name,ext] = fileparts(which(mfilename));
    addpath(path,fullfile(path,'common_files'),...
        fullfile(path,'common_files','index_data'));

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    [StartFigTextColor,StartFigBackColor,OutputFigTextColor,OutputFigBackColor,...
        ButtonTextColor,ButtonBackColor,EditTextColor,EditBackColor,...
        FrameTextColor,FrameBackColor,FontName,FontUnits,FontWeight,FontAngle,...
        TitleTextFontSize,HeaderTextFontSize,BodyTextFontSize,Body2TextFontSize,...
        SmallTextFontSize,ButtonFontSize,SmallButtonFontSize,...
        StartFigWidth,StartFigHt,OutputFigWidth,OutputFigHt]=lfosr_fontscolors;

    figLeft       = 132;
    figBottom     = 48;
    figWidth      = StartFigWidth;
    figHt         = StartFigHt;

    center        = 0.5;
    spacing1      = 0.07;
    spacing2      = 0.015;
    spacing3      = 0.0001;
    marginleft    = 0.086;

    txtWidth      = 0.22;
    txtHt         = 0.04;
    bigtxtHt      = 0.05;

    buttonBottom  = 0.07;
    buttonWidth   = 0.17;
    buttonHt      = 0.06;

    editWidth     = 0.10;
    editHt        = 0.06;

    radioWidth    = 0.20;
    radioHt       = 0.04;

    %%%%%%%%%%%%%%%%% PROGRAM INPUT CONTROL %%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %path and name of file plus Text Extension
    f_location_home = which('detector_defaults.txt');
    f_location_default = fullfile(path,'common_files','detector_defaults.txt');

    %
    % This code allows for multi-user systems where default files are in specific
    %  user files that are in the matlab path above LFOSR files.
    %
    if ~strcmp(f_location_home,f_location_default)
        f_location=f_location_home;
    else
        f_location=f_location_default;
    end

    fid        = fopen(f_location,'r');
    if fid==-1 %check for error on open
        error('Unable to open file.')
    end
    %
    Structure_file_location   = fgetl(fid);
    Start_lambdasweep_default = str2double(fgetl(fid));
    Stop_lambdasweep_default  = str2double(fgetl(fid));
    Start_thetasweep_default  = str2double(fgetl(fid));
    Stop_thetasweep_default   = str2double(fgetl(fid));
    Start_layersweep_default  = str2double(fgetl(fid));
    Stop_layersweep_default   = str2double(fgetl(fid));
    Points_value_default      = str2double(fgetl(fid));
    Angle_value_default       = str2double(fgetl(fid));
    Wavelength_value_default  = str2double(fgetl(fid));
    Layer_value_default       = str2double(fgetl(fid));
    Length_value_default      = str2double(fgetl(fid));
    %
    Lambda_default            = str2double(fgetl(fid));
    Theta_default             = str2double(fgetl(fid));
    A_Length_default          = str2double(fgetl(fid));
    %
    Slider_Bar_default        = str2double(fgetl(fid));
    Percentage_Length_default = str2double(fgetl(fid));
    Timedebug_default         = str2double(fgetl(fid));
    %
    fclose(fid);
    %
    sweep_choice = 100*Lambda_default+10*Theta_default+1*A_Length_default;

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    handle = figure('Color',StartFigBackColor, ...
        'Name',['LFOSR QECalc v',num2str(LFOSRVersion)],...
        'NumberTitle','off',...
        'Menubar','none',...
        'Position',[figLeft figBottom figWidth figHt],...
        'Tag','DETECTOR');

    if versionnumber<5.3
        set(handle,'HandleVisibility','callback')
    elseif versionnumber>=5.3&&versionnumber<6.0
        set(handle,'HandleVisibility','callback','HitTest','off')
    elseif versionnumber>=6.0&&versionnumber<6.5
        set(handle,'HandleVisibility','callback')
    elseif versionnumber>=6.5
        set(handle,'Resize','off')  %didn't work in WinXP in previous versions
    end
    %%%%%%%%%%%%%%%%%%%%%%%%%%% Headings %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%% Title %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',TitleTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','center', ...
        'Position',[0 .93 1 bigtxtHt], ...
        'String','Layered Film Optical Simulation Routine', ...
        'Style','text');
    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',TitleTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','center', ...
        'Position',[0 .88 1 bigtxtHt], ...
        'String',['Quantum Efficiency Calculation - Version ',num2str(LFOSRVersion)], ...
        'Style','text');
    %%%%%%%%%%%% Headings %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',BodyTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft .803 .28 bigtxtHt], ...
        'String','Choose Structure File', ...
        'Style','text');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',BodyTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft .526 .28 bigtxtHt], ...
        'String','Choose Sweep Variable', ...
        'Style','text');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',BodyTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.07 .276 .28 bigtxtHt], ...
        'String','Choose Active Layer', ...
        'Style','text');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',BodyTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft .276 .24 bigtxtHt], ...
        'String','Program Information', ...
        'Style','text');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',SmallTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','center', ...
        'Position',[.35 .485 .3 txtHt], ...
        'String','(All lengths given in nanometers!)', ...
        'Style','text');
    
    Percentage_Length = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.10+2*(radioWidth+spacing3) .485 1.6*radioWidth radioHt], ...
        'String','Vary by %', ...
        'Value',Percentage_Length_default,...
        'Style','checkbox', ...
        'Tag','Detector_Percentage_Length');
    
    userselect_h2 = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',SmallTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','center', ...
        'Position',[0 0.01 1 txtHt], ...
        'Style','text', ...
        'String',['User Run Option - ',upper(user_selection)],...
        'Tag','Detector_User_selection');
    if user_run
        set(userselect_h2,'Visible','on');
    else
        set(userselect_h2,'Visible','off');
    end

    %%%%%%%%%%% Sweep Variable %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    Lambda = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.10 .529 radioWidth radioHt], ...
        'String','Lambda', ...
        'Value',Lambda_default,...
        'Style','radiobutton', ...
        'Tag','Detector_Lambda');

    Theta = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.10+(radioWidth+spacing3) .529 radioWidth radioHt], ...
        'String','Theta', ...
        'Value',Theta_default,...
        'Style','radiobutton', ...
        'Tag','Detector_Theta');

    A_Length = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.10+2*(radioWidth+spacing3) .529 radioWidth radioHt], ...
        'String','Length', ...
        'Value',A_Length_default,...
        'Style','radiobutton', ...
        'Tag','Detector_A_Length');

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+0*(editWidth+spacing1) .38+editHt txtWidth txtHt], ...
        'String','Start Value', ...
        'Style','text');
    Start = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+0*(editWidth+spacing1) .38 editWidth editHt], ...
        'Style','edit', ...
        'Tag','Detector_Start');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+1*(editWidth+spacing1) .38+editHt txtWidth txtHt], ...
        'String','End Value', ...
        'Style','text');
    Stop = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+1*(editWidth+spacing1) .38 editWidth editHt], ...
        'Style','edit', ...
        'Tag','Detector_Stop');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+2*(editWidth+spacing1) .38+editHt txtWidth txtHt], ...
        'String','Data Points', ...
        'Style','text');
    uicontrol('Parent',handle, ... %Points = 
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+2*(editWidth+spacing1) .38 editWidth editHt], ...
        'Style','edit', ...
        'String',Points_value_default,...
        'Tag','Detector_Points');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+3*(editWidth+spacing1) .38+editHt txtWidth txtHt], ...
        'String','Incident Angle',...
        'Style','text');
    Angle = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+3*(editWidth+spacing1) .38 editWidth editHt], ...
        'Style','edit', ...
        'String',Angle_value_default,...
        'Tag','Detector_Angle');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+4*(editWidth+spacing1) .38+editHt txtWidth txtHt], ...
        'String','Incident Wavelength',...
        'Style','text');
    Wavelength = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+4*(editWidth+spacing1) .38 editWidth editHt], ...
        'Style','edit', ...
        'String',Wavelength_value_default,...
        'Tag','Detector_Wavelength');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.07+txtWidth .276-(txtHt+spacing2) txtWidth txtHt], ...
        'String','Length Layer Number', ...
        'Style','text');
    Length = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.07+txtWidth .276-(editHt+spacing2+txtHt) editWidth editHt], ...
        'Style','edit', ...
        'String',Length_value_default,...
        'Tag','Detector_Length');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.07 .276-(txtHt+spacing2) txtWidth txtHt], ...
        'String','Active Layer Number', ...
        'Style','text');
    Layer = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.07 .276-(editHt+spacing2+txtHt) editWidth editHt], ... %+spacing1+editWidth/2
        'Style','edit', ...
        'String',Layer_value_default,...
        'Tag','Detector_Layer');

    %              1      2     3        4     5    6     7          8
    %   9      10
    %   11                       12
    %   13                       14
    %   15                       16
    Radio_Handles={Lambda Theta A_Length Start Stop Angle Wavelength Layer ...
        Length Percentage_Length...
        Start_lambdasweep_default Stop_lambdasweep_default ...
        Start_thetasweep_default Stop_thetasweep_default ...
        Start_layersweep_default Stop_layersweep_default};

    switch sweep_choice
        case 100 %lambda sweep
            lfosr_guivalues(handle,Lambda,Radio_Handles)
        case 10 %theta sweep
            lfosr_guivalues(handle,Theta,Radio_Handles)
        case 1 %layer sweep
            lfosr_guivalues(handle,A_Length,Radio_Handles)
    end

    set(Lambda,'UserData',Radio_Handles)
    set(Theta,'UserData',Radio_Handles)
    set(A_Length,'UserData',Radio_Handles)

    set(Lambda,'CallBack','lfosr_guivalues(gcbf,gcbo,get(gcbo,''Userdata''))')
    set(Theta,'CallBack','lfosr_guivalues(gcbf,gcbo,get(gcbo,''Userdata''))')
    set(A_Length,'CallBack','lfosr_guivalues(gcbf,gcbo,get(gcbo,''Userdata''))')

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    %%%%%%%% Structure File %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    default = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center .806 1.4*radioWidth radioHt], ...
        'String','Default Structure File', ...
        'Style','radiobutton');

    no_default = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center .730 1.4*radioWidth radioHt], ...
        'String','Select Structure File', ...
        'Style','radiobutton');

    Path=uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center .635 .417 buttonHt], ...
        'String',Structure_file_location, ...
        'Style','edit', ...
        'Tag','Detector_Path');

    Edit_structure=uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',ButtonBackColor, ...
        'ForegroundColor',ButtonTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'Position',[marginleft .635 1.5*buttonWidth buttonHt], ...
        'String','Edit Structure File');

    if strcmp(Structure_file_location,'structure.txt')
        set(default,'Value',1)
        set(no_default,'Value',0)
    else
        set(default,'Value',0)
        set(no_default,'Value',1)
    end

    set(       default,'UserData',[default no_default Path Edit_structure])
    set(    no_default,'UserData',[default no_default Path Edit_structure])
    set(          Path,'UserData',[default no_default Path Edit_structure])
    set(Edit_structure,'UserData',[default no_default Path Edit_structure])

    set(       default,'CallBack','structure_select(gcbo,get(gcbo,''UserData''))')
    set(    no_default,'CallBack','structure_select(gcbo,get(gcbo,''UserData''))')
    set(          Path,'CallBack','structure_select(gcbo,get(gcbo,''UserData''))')
    set(Edit_structure,'CallBack','structure_select(gcbo,get(gcbo,''UserData''))')

    %%%%%%%%%% Output Graphs %%%%%%%%%%%%%%%%%%%%%%%%%%%%
    uicontrol('Parent',handle, ... %Slider_Bar = 
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft .276-(radioHt+spacing2) 1.6*radioWidth radioHt], ...
        'String','Show Thickness Slider Bar', ...
        'Value',Slider_Bar_default,...
        'Style','checkbox', ...
        'Tag','Detector_Slider_Bar');

    uicontrol('Parent',handle, ... %Timedebug = 
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft .276-2*(radioHt+spacing2) 1.6*radioWidth radioHt], ...
        'String','Show Program Time Information', ...
        'Value',Timedebug_default,...
        'Style','checkbox', ...
        'Tag','Detector_Timedebug');

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',ButtonBackColor, ...
        'ForegroundColor',ButtonTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'Position',[center-2*(buttonWidth+2*spacing2)-buttonWidth/2,buttonBottom buttonWidth buttonHt], ...
        'String','Start', ...
        'Callback','detector(''run'')');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',ButtonBackColor, ...
        'ForegroundColor',ButtonTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'Position',[center-1*(buttonWidth+2*spacing2)-buttonWidth/2,buttonBottom buttonWidth buttonHt], ...
        'String','Web Help', ...
        'Callback','detector(''web'')');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',ButtonBackColor, ...
        'ForegroundColor',ButtonTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'Position',[center-0*(buttonWidth+2*spacing2)-buttonWidth/2,buttonBottom buttonWidth buttonHt], ...
        'String','Check Version', ...
        'Callback','detector(''version'')');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',ButtonBackColor, ...
        'ForegroundColor',ButtonTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'Position',[center-0*(buttonWidth+2*spacing2)+buttonWidth/2+2*spacing2,buttonBottom buttonWidth buttonHt], ...
        'String','Save Settings', ...
        'Callback','detector(''save'')');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',ButtonBackColor, ...
        'ForegroundColor',ButtonTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'Position',[center+1*(buttonWidth+2*spacing2)+buttonWidth/2+2*spacing2,buttonBottom buttonWidth buttonHt], ...
        'String','Close', ...
        'Callback','detector(''close'')');

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%% END INITIALIZE PROGRAM INTERFACE %%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%% RUN PROGRAM FILM ROUTINE %%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
elseif strcmp(action,'run')
    clc  %clear command window
    disp(' ')
    wait_bar=waitbar(0,'Please wait...'); %start wait bar for user info

    %
    %find parameters for program execution
    %
    Start_tag = findobj(gcbf,'Tag','Detector_Start');
    Stop_tag = findobj(gcbf,'Tag','Detector_Stop');
    Points_tag            = findobj(gcbf,'Tag','Detector_Points');
    Theta_tag             = findobj(gcbf,'Tag','Detector_Theta');
    Lambda_tag            = findobj(gcbf,'Tag','Detector_Lambda');
    A_Length_tag          = findobj(gcbf,'Tag','Detector_A_Length');
    Path_tag              = findobj(gcbf,'Tag','Detector_Path');
    Angle_tag             = findobj(gcbf,'Tag','Detector_Angle');
    Wavelength_tag        = findobj(gcbf,'Tag','Detector_Wavelength');
    Layer_tag             = findobj(gcbf,'Tag','Detector_Layer');
    Length_tag            = findobj(gcbf,'Tag','Detector_Length');
    Slider_Bar_tag        = findobj(gcbf,'Tag','Detector_Slider_Bar');
    Percentage_Length_tag = findobj(gcbf,'Tag','Detector_Percentage_Length');
    Timedebug_tag = findobj(gcbf,'Tag','Detector_Timedebug');
    User_selection_tag  = findobj(gcbf,'Tag','Detector_User_selection');

    %
    %now that parameters are read turn off figure visibility to prevent
    % user intervention
    %
    handle_temp=gcf;
    set(handle_temp,'HandleVisibility','off')

    %
    %convert parameter strings into number values
    %
    Start             = str2double(get(Start_tag,'String'));
    Stop              = str2double(get(Stop_tag,'String'));
    Points            = str2double(get(Points_tag,'String'));
    Lambda            = get(Lambda_tag,'Value');
    A_Length          = get(A_Length_tag,'Value');
    Theta             = get(Theta_tag,'Value');
    Path              = get(Path_tag,'String');
    Angle             = str2double(get(Angle_tag,'String'));
    Wavelength        = str2double(get(Wavelength_tag,'String'));
    Layer             = str2double(get(Layer_tag,'String'));
    Length            = str2double(get(Length_tag,'String'));
    Slider_Bar        = get(Slider_Bar_tag,'Value');
    Percentage_Length = get(Percentage_Length_tag,'Value');
    Timedebug         = get(Timedebug_tag,'Value');
    User_selection    = strrep(get(User_selection_tag,'String'),...
        'User Run Option - ','');

    %
    %determine program execution sweep variable for x-axis
    %
    Sweep_Variable=100*Lambda+10*Theta+1*A_Length;
    Line_suppress = 0; %turn off line suppression to display program execution info

    %
    %run routine to acquire refractive index values as well as set up
    %lambda, theta, and thickness matricies
    %

    n_index_warning_alert = 1; %turn on wavelength range warnings

    if strcmp(Path,'structure.txt')
        Path=which('structure.txt');
    end
    [lambda,refractive_index,thickness,theta,error_lfosr_input]=lfosr_input(LFOSRVersion,...
        Start,Stop,Points,Angle,Wavelength,Layer,Length,Percentage_Length,Path,Sweep_Variable,Timedebug,...
        User_selection,n_index_warning_alert,Line_suppress);
    
    %
    %check for error in execution of setup routine stop execution if unsuccessful
    %
    if error_lfosr_input==1
        disp('Error returned by lfosr_input.m !!!')
        set(handle_temp,'HandleVisibility','callback')
        waitbar(5/5)
        close(wait_bar)
        return

        %
        %if successful continue on to QE calculation
        %
    else
        waitbar(3/5)

        %
        %run R,T,P calculation
        %
        [QE,error_detector_calculation]=detector_calculation(lambda,theta,thickness,...
            refractive_index,Layer,Length,Sweep_Variable,Timedebug,Line_suppress);
        
        if strcmpi(User_selection,'peakqeff')
            h           =6.62617e-34;        %Planck constant [J.s]
            c           =2.998e8;            %Speed of Light in Vacuum [m/s]
            q_e         =1.60218e-19;        %Elementary charge [C]
            
            disp(['Max Quantum Efficiency: ',num2str(max(QE(2,:)))])
            disp(['Min Quantum Efficiency: ',num2str(min(QE(2,:)))])
            disp(' ')
            disp(['Max Responsivity: ',num2str(max(QE(2,:)'.*q_e.*lambda.*1e-9./h./c))])
            disp(['Min Responsivity: ',num2str(min(QE(2,:)'.*q_e.*lambda.*1e-9./h./c))])
        end
        
        if strcmpi(User_selection,'nonpolarized')
            QE(2,:)=QE(2,:)./2+QE(3,:)./2;
            QE(3,:)=QE(2,:);
        end   
            
        if strcmpi(User_selection,'solar')
            h    =6.62617e-34;   %Planck constant [J.s]
            c    =2.998e8;       %Speed of Light in Vacuum [m/s]
            q_e  =1.60218e-19;   %Elementary charge [C]
            T    =298;           %Temp [K]
            k_b  =1.38066e-23;   %Boltzmann constant [J/K]
            n_i  =1.01e10*100^3; %Intrinsic conc in Si [m^-3]
            N_a  =1e15*100^3;    %Source/Drain Doping [m^-3]
            
            load solarspectra.mat
            solarirradiance_int(:,1)=lambda;
            solarirradiance_int(:,2)=interp1(solarirradiance(:,1),solarirradiance(:,2),lambda,'nearest','extrap'); %W/m^2/nm

            QE(2,:)=solarirradiance_int(:,2)'.*QE(2,:).*lambda'.*1e-9./h./c.*q_e; %A/m^2/nm - TM
            QE(3,:)=solarirradiance_int(:,2)'.*QE(3,:).*lambda'.*1e-9./h./c.*q_e; %A/m^2/nm - TE
            
            integratedincidentpowerperunitarea=cumtrapz(solarirradiance(:,1),solarirradiance(:,2));
            totalincidientpowerperunitarea=integratedincidentpowerperunitarea(end);

            integratedpowerperunitarea_TM=cumtrapz(lambda,QE(2,:));
            totalpowerperunitarea_TM=integratedpowerperunitarea_TM(end);
            integratedpowerperunitarea_TE=cumtrapz(lambda,QE(3,:));
            totalpowerperunitarea_TE=integratedpowerperunitarea_TE(end);
            totalpowerperunitarea=totalpowerperunitarea_TE/2+totalpowerperunitarea_TM/2;
            
            V_oc=k_b*T/q_e*log((N_a+(totalpowerperunitarea./q_e))*totalpowerperunitarea./q_e/n_i^2);
            
            cellefficiency=(totalpowerperunitarea*V_oc)/totalincidientpowerperunitarea;

            disp(['Incident Power = ',num2str(totalincidientpowerperunitarea,4),' W/m^2 ',...
                'Power Generated = ',num2str(totalpowerperunitarea*V_oc,4),' W/m^2 ',...
                'V_oc = ',num2str(V_oc,4),' V ',...
                'J_sc = ',num2str(totalpowerperunitarea/10,4),' mA/cm^2 ',...
                'delta_N = ',num2str(totalpowerperunitarea./q_e,4),' A/m^2 ',...
                'Efficiency = ',num2str(cellefficiency*100,4),' %'])
        end

        if strcmpi(User_selection,'mono')
            mono_bandwidth=2;
            [lambda_low,refractive_index_low,thickness,theta,error_lfosr_input]=lfosr_input(LFOSRVersion,...
                Start+mono_bandwidth,Stop+mono_bandwidth,Points,Angle,Wavelength,Layer,Length,Percentage_Length,Path,Sweep_Variable,Timedebug,...
                User_selection,n_index_warning_alert,Line_suppress);
            
            [QE_low,error_detector_calculation]=detector_calculation(lambda_low,theta,thickness,...
                refractive_index_low,Layer,Length,Sweep_Variable,Timedebug,Line_suppress);
            
            [lambda_high,refractive_index_high,thickness,theta,error_lfosr_input]=lfosr_input(LFOSRVersion,...
                Start-mono_bandwidth,Stop-mono_bandwidth,Points,Angle,Wavelength,Layer,Length,Percentage_Length,Path,Sweep_Variable,Timedebug,...
                User_selection,n_index_warning_alert,Line_suppress);

            [QE_high,error_detector_calculation]=detector_calculation(lambda_high,theta,thickness,...
                refractive_index_high,Layer,Length,Sweep_Variable,Timedebug,Line_suppress);
    
            QE(2,:)=(QE_low(2,:)+QE(2,:)+QE_high(2,:))./3;
            QE(3,:)=(QE_low(3,:)+QE(3,:)+QE_high(3,:))./3;            
        end
        
        if strcmpi(User_selection,'pda')
            h    =6.62617e-34;   %Planck constant [J.s]
            c    =2.998e8;       %Speed of Light in Vacuum [m/s]
            q_e  =1.60218e-19;   %Elementary charge [C]
            T    =298;           %Temp [K]
            k_b  =1.38066e-23;   %Boltzmann constant [J/K]
            n_i  =1.01e10*100^3; %Intrinsic conc in Si [m^-3]
            N_a  =1e15*100^3;    %Source/Drain Doping [m^-3
            
            pda_source=3;
            switch pda_source
                case 1
                    load thorlabsm505.mat
                    pdadata(:,1)=lambda;
                    pdadata(:,2)=interp1(thorlabsm505(:,1),thorlabsm505(:,2),lambda,'nearest','extrap'); %W/nm
                case 2
                    load gadoliniumoxysulfide.mat
                    pdadata(:,1)=lambda;
                    pdadata(:,2)=interp1(GadoliniumOxysulfide(:,1),GadoliniumOxysulfide(:,2),lambda,'nearest','extrap'); %W/nm
                case 3
                    load CadmiumTungstate.mat
                    pdadata(:,1)=lambda;
                    pdadata(:,2)=interp1(CadmiumTungstate(:,1),CadmiumTungstate(:,2),lambda,'nearest','extrap'); %W/nm
            end
            
            QE(2,:)=pdadata(:,2)'.*QE(2,:).*lambda'.*1e-9./h./c.*q_e; %A/nm - TM
            QE(3,:)=pdadata(:,2)'.*QE(3,:).*lambda'.*1e-9./h./c.*q_e; %A/nm - TE

            integratedincidentpower=cumtrapz(pdadata(:,1),pdadata(:,2));
            totalincidientpower=integratedincidentpower(end);

            integratedcurrent_TM=cumtrapz(lambda,QE(2,:));
            totalcurrent_TM=integratedcurrent_TM(end);
            integratedcurrent_TE=cumtrapz(lambda,QE(3,:));
            totalcurrent_TE=integratedcurrent_TE(end);
            totalcurrent=totalcurrent_TE/2+totalcurrent_TM/2;
 
            disp(['Incident Power = ',num2str(totalincidientpower,4),' W ',...
                'Generated Current = ',num2str(totalcurrent,4),' A '])

        end
        %check for error in execution of setup routine stop execution if unsuccessful
        %
        if error_detector_calculation==1
            disp('Error returned by detector_calculation.m !!!')
            set(handle_temp,'HandleVisibility','callback')
            waitbar(5/5)
            close(wait_bar)
            return

            %
            %if successful continue on to plot output
            %
        else
            waitbar(4/5)

            Answer_Matrix=QE;
            lfosr_output(gcbf,LFOSRVersion,Path,lambda,theta,thickness,refractive_index,...
                Answer_Matrix,Layer,Length,Percentage_Length,Sweep_Variable,Slider_Bar,Timedebug,User_selection,Line_suppress);

            set(handle_temp,'HandleVisibility','callback')
            waitbar(5/5)
            close(wait_bar)
        end
    end

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%% END RUN PROGRAM FILM ROUTINE %%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SAVE SETTINGS %%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
elseif strcmp(action,'save'),
    Structure_file_tag    = findobj(gcbf,'Tag','Detector_Path');
    Start_tag             = findobj(gcbf,'Tag','Detector_Start');
    Stop_tag              = findobj(gcbf,'Tag','Detector_Stop');
    Points_tag            = findobj(gcbf,'Tag','Detector_Points');
    Angle_tag             = findobj(gcbf,'Tag','Detector_Angle');
    Wavelength_tag        = findobj(gcbf,'Tag','Detector_Wavelength');
    Layer_tag             = findobj(gcbf,'Tag','Detector_Layer');
    Length_tag            = findobj(gcbf,'Tag','Detector_Length');
    Theta_tag             = findobj(gcbf,'Tag','Detector_Theta');
    Lambda_tag            = findobj(gcbf,'Tag','Detector_Lambda');
    A_Length_tag          = findobj(gcbf,'Tag','Detector_A_Length');
    Slider_Bar_tag        = findobj(gcbf,'Tag','Detector_Slider_Bar');
    Percentage_Length_tag = findobj(gcbf,'Tag','Detector_Percentage_Length');
    Timedebug_tag         = findobj(gcbf,'Tag','Detector_Timedebug');

    Structure_file_location = get(Structure_file_tag,'String');
    Start                   = str2double(get(Start_tag,'String'));
    Stop                    = str2double(get(Stop_tag,'String'));
    Points                  = str2double(get(Points_tag,'String'));
    Angle                   = str2double(get(Angle_tag,'String'));
    Wavelength              = str2double(get(Wavelength_tag,'String'));
    Layer                   = str2double(get(Layer_tag,'String'));
    Length                  = str2double(get(Length_tag,'String'));
    Lambda                  = get(Lambda_tag,'Value');
    Theta                   = get(Theta_tag,'Value');
    A_Length                = get(A_Length_tag,'Value');
    Slider_Bar              = get(Slider_Bar_tag,'Value');
    Percentage_Length       = get(Percentage_Length_tag,'Value');
    Timedebug               = get(Timedebug_tag,'Value');

    sweep_choice=100*Lambda+10*Theta+1*A_Length;

    [path,name,ext] = fileparts(which(mfilename));

    %path and name of file plus Text Extension
    f_location_home = which('detector_defaults.txt');
    f_location_default = fullfile(path,'common_files','detector_defaults.txt');

    %
    % This code allows for multi-user systems where default files are in specific
    %  user files that are in the matlab path above LFOSR files.
    %
    if ~strcmp(f_location_home,f_location_default)
        f_location=f_location_home;
    else
        f_location=f_location_default;
    end

    fid        = fopen(f_location,'r');
    if fid==-1 %check for error on open
        error('Unable to open file.')
    end
    line_temp                 = fgetl(fid);
    Start_lambdasweep_default = str2double(fgetl(fid));
    Stop_lambdasweep_default  = str2double(fgetl(fid));
    Start_thetasweep_default  = str2double(fgetl(fid));
    Stop_thetasweep_default   = str2double(fgetl(fid));
    Start_layersweep_default  = str2double(fgetl(fid));
    Stop_layersweep_default   = str2double(fgetl(fid));
    Points_value_default      = str2double(fgetl(fid));
    Angle_value_default       = str2double(fgetl(fid));
    Wavelength_value_default  = str2double(fgetl(fid));
    Layer_value_default       = str2double(fgetl(fid));
    Length_value_default      = str2double(fgetl(fid));
    %
    Lambda_default            = str2double(fgetl(fid));
    Theta_default             = str2double(fgetl(fid));
    A_Length_default          = str2double(fgetl(fid));
    %
    Slider_Bar_default        = str2double(fgetl(fid));
    Percentage_Length_default = str2double(fgetl(fid));
    Timedebug_default         = str2double(fgetl(fid));
    %
    fclose(fid);
    %

    switch sweep_choice
        case 100 %lambda sweep
            Start_lambdasweep_default = Start;
            Stop_lambdasweep_default  = Stop;
            Points_value_default      = Points;
            Angle_value_default       = Angle;
            Layer_value_default       = Layer;
            Length_value_default      = Length;
        case 10 %theta sweep
            Start_thetasweep_default  = Start;
            Stop_thetasweep_default   = Stop;
            Points_value_default      = Points;
            Wavelength_value_default  = Wavelength;
            Layer_value_default       = Layer;
        case 1 %layer sweep
            Start_layersweep_default  = Start;
            Stop_layersweep_default   = Stop;
            Points_value_default      = Points;
            Angle_value_default       = Angle;
            Wavelength_value_default  = Wavelength;
            Layer_value_default       = Layer;
            Length_value_default      = Length;
    end

    %
    Lambda_default            = Lambda;
    Theta_default             = Theta;
    A_Length_default          = A_Length;
    %
    Slider_Bar_default        = Slider_Bar;
    Percentage_Length_default = Percentage_Length;
    Timedebug_default         = Timedebug;

    %%%%%%%%%%%

    %path and name of file plus Text Extension
    fid        = fopen(f_location,'wt');
    if fid==-1 %check for error on open
        error('Unable to open file.')
    end
    fprintf(fid,'%s\n',Structure_file_location);
    fprintf(fid,'%s\n',num2str(Start_lambdasweep_default));
    fprintf(fid,'%s\n',num2str(Stop_lambdasweep_default));
    fprintf(fid,'%s\n',num2str(Start_thetasweep_default));
    fprintf(fid,'%s\n',num2str(Stop_thetasweep_default));
    fprintf(fid,'%s\n',num2str(Start_layersweep_default));
    fprintf(fid,'%s\n',num2str(Stop_layersweep_default));
    fprintf(fid,'%s\n',num2str(Points_value_default));
    fprintf(fid,'%s\n',num2str(Angle_value_default));
    fprintf(fid,'%s\n',num2str(Wavelength_value_default));
    fprintf(fid,'%s\n',num2str(Layer_value_default));
    fprintf(fid,'%s\n',num2str(Length_value_default));
    fprintf(fid,'%s\n',num2str(Lambda_default));
    fprintf(fid,'%s\n',num2str(Theta_default));
    fprintf(fid,'%s\n',num2str(A_Length_default));
    fprintf(fid,'%s\n',num2str(Slider_Bar_default));
    fprintf(fid,'%s\n',num2str(Percentage_Length_default));
    fprintf(fid,'%s\n',num2str(Timedebug_default));
    fclose(fid);
    disp('Settings saved successfully')

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%% END SAVE SETTINGS %%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%% HELP & CLOSE PROGRAM INTERFACE %%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
elseif strcmp(action,'web')
    if versionnumber<5.3
        web('http://www.mattemsley.com/LFOSR/');
    elseif versionnumber>=5.3 && versionnumber<6.0
        web('http://www.mattemsley.com/LFOSR/');
    elseif versionnumber>=6.0
        web('http://www.mattemsley.com/LFOSR/','-browser');
    end

elseif strcmp(action,'version')
    if versionnumber<5.3
        warndlg(['Function not available in Matlab v',num2str(versionnumber),'.  ',...
            'Please contact Matthew K. Emsley (memsley@bu.edu) to check for ',...
            'latest version.'],'Version Check')
    else
        [license_numbers,error_lfosr_license]=lfosr_license(LFOSRVersion);
    end

elseif strcmp(action,'info'),
    helpwin(mfilename);

elseif strcmp(action,'close')
    close(gcf)
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%% END HELP & CLOSE PROGRAM INTERFACE %%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%% END CLOSE PROGRAM INTERFACE %%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
