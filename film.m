function []=film(action)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  film.m                                                           %
%  Date: 07/02/2002                                                 %
%  Version: 3.40                                                    %
%  Authors:  Matthew K. Emsley                                      %
%            John W. Graff                                          %
%            Gokhan Ulu                                             %
%            Rachel Kaplan                                          %
%                                                                   %
%  Updates:                                                         %
%            v3.40 07/02/2002                                       %
%                                                                   %
%            v3.30 05/04/2001  Simplification of file path          %
%            determination using built in Matlab functions          %
%            FILEPARTS and FULLFILE, to insure proper subroutine    %
%            selection if path is not set correctly by user.        %
%            Addition of structure path to set of saved values, as  %
%            revamp of saved values file look up to include strings %
%            which is required for structure path.  Addition of new %
%            subroutine LFOSR_EDIT.m for editing default GUI values %
%            for fonts, colors, and figure sizes.                   %
%                                                                   %
%            v3.20 03/13/2001  Massive update to program exectution %
%            and data output, total revamp of subroutines and the   %
%            addition of adjustbars to plots.  Also fixed bug that  %
%            disabled multiple instances of program from running by %
%            GCBF to FINDOBJ command related to TAG.  Fix of        %
%            uicontrol positions to normalized to allow for         %
%            figure resizing.  Addition of WAITBAR to inform user   %
%            of program execution progress.  Addition of code for   %
%            MATLAB version information to support MATLAB versions  %
%            5.0 and greater.  Also found bug in MATLAB R12 version %
%            6.0 that cause general protection fault due to setting %
%            FIGURE 'HITTEST' property to 'OFF', so I disabled this %
%            setting.                                               %
%                                                                   %
%            v3.14 02/13/2001  Fixed bug with figure handle         %
%            visibility that allowed commands from the prompt to    %
%            be displayed on top of the film.m interface.  Also     %
%            fixed path selection to query mfilename instead of     %
%            hard coded string string. added ability to save gui    %
%            settings.                                              %
%                                                                   %
%            v3.13 02/09/2001  Fixed bug with figure handle         %
%            visibility that allowed commands from the prompt to    %
%            be displayed on top of the figure interface.  Also     %
%            fixed path selection to query mfilename instead of     %
%            hard coded string string.                              %
%                                                                   %
%            v3.12 02/06/2001  Added option for plotting versus     %
%            energy.  also added button for view info screen        %
%                                                                   %
%            v3.11 06/15/2000  Addition of layer sweep to program   %
%            now you can sweep single layer thickenss               %
%                                                                   %
%            v3.1 05/18/2000  Update to gui structure, program      %
%            now runs as independent gui and frees the matlab       %
%            window                                                 %
%                                                                   %
%            v3.0 04/22/2000  Massive update to ReflectionTM,       %
%            ReflectionTE,n_index routines allowing matrix input    %
%            for theta and lambda individually                      %
%                                                                   %
%            v2.0 11/30/1999                                        %
%            Modified Structure File and opening routine so         %
%            anything after '<-- Top -->' is scanned                %
%                                                                   %
%            v1.0 4/19/1999                                         %
%            Original version                                       %
%                                                                   %
%  Description:                                                     %
%            film.m calculates the TM and TE reflection and         %
%            transmission and phase from a layered structure using  %
%            film scattering matrix calculations.                   %
%                                                                   %
%  Supporting Files:                                                %
%            exportfig.m - converts plot to jpeg or eps             %
%            film_calculation.m - kernel for calc                   %
%            film_defaults.txt - gui defaults                       %
%            lfosr_adjust.m - used for sliderbar adjusting          %
%            lfosr_fontscolors.m - gui values fonts/colors          %
%            lfosr_guivalues.m - changes gui values for sweep var   %
%            lfosr_input.m - sets up data matrix for calc.          %
%            lfosr_output.m - creates figures for display           %
%            lfosr_pcfont.txt - default pc gui font                 %
%            lfosr_plot.m - plots data on output figures            %
%            lfosr_unixfont.txt - default unix gui font             %
%            n_index.m - calculates index of materials              %
%            ReflectionTE.m - kernel for TE calc                    %
%            ReflectionTM.m - kernel for TM calc                    %
%            save_figure.m - saves figure to image file             %
%            save_file.m - saves data from plot to txt              %
%            structure.txt - default layer structure file           %
%            structure_modify.m - saves thickness to new structure  %
%            structure_read.m - read structure file input           %
%            structure_select.m - for structure selection at start  %
%            ..\index_data\*.kkk - k data of material               %
%            ..\index_data\*.nnn - n data of material               %
%                                                                   %
%  Inputs:                                                          %
%           action == control input(eval,close,info,intialize,save) %
%                                                                   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
LFOSRVersion=3.41; %routine version code

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%% PROGRAM INPUT CONTROL %%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if nargin < 1 %on start without input variables run initialize code
    action = 'initialize';
end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%% END PROGRAM INPUT CONTROL %%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%% INITIALIZE PROGRAM INTERFACE %%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if strcmp(action,'initialize')

    %
    % Display user option selection
    %
    disp(['LFOSR Film Routine Version ',num2str(LFOSRVersion)])
    disp(' User Option Selection')
    disp('  1 - Standard Option (default)')
    disp('  2 - Power Option')
    disp('  3 - Display Maximum Reflectivity Option')
    disp('  4 - Bio Sensor Option')
    disp('  5 - Spectral Photometer Filter Option')
    disp('  6 - Propagation Map Option')
    disp('  7 - Reflected | Transmitted | Absorbed Area')
    disp('  8 - Non-polarized Light Source')
    disp('  9 - Textured Reflection')
    disp(' ')
    user_option=input('Please select User Option (1 - default)-> ','s');

    %
    % If nothing is entered 1 is assumed as default
    %
    if isempty(user_option)
        user_option='1';
    end

    %
    % This allows users to enter "exit, quit, or q" to quit the LFOSR routine
    %   all other text entrys result in error
    %
    if ischar(user_option) && (strcmp(user_option,'quit')||strcmp(user_option,'q')||strcmp(user_option,'exit'))
        return
    elseif ischar(user_option) && isempty(str2double(user_option))
        error('Invalide User Option Entry')
    end

    user_option=str2double(user_option); %converts to number for option check

    %
    % This is the option selection to resolve user input to avaiable options
    %
    if user_option==1
        user_selection='none';
        user_run=0;
    elseif user_option==2
        user_selection='power';
        user_run=1;
    elseif user_option==3
        user_selection='max';
        user_run=1;
    elseif user_option==4
        user_selection='biosensor';
        user_run=1;
    elseif user_option==5
        user_selection='specphoto';
        user_run=1;
    elseif user_option==6
        user_selection='propagation';
        user_run=1;
    elseif user_option==7
        user_selection='area';
        user_run=1;
    elseif user_option==8
        user_selection='nonpolarized';
        user_run=1;
    elseif user_option==9
        user_selection='textured';
        user_run=1;
    else
        error('Incorrect User Option')
    end
    %%%%%%%%%%%%%%%%% SUBROUTINE PATH INPUT %%%%%%%%%%%%%%%%%%%%%%%%%%%%
    [path,name,ext] = fileparts(which(mfilename));
    addpath(path,fullfile(path,'common_files'),...
        fullfile(path,'common_files','index_data'));

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    [StartFigTextColor,StartFigBackColor,OutputFigTextColor,OutputFigBackColor,...
        ButtonTextColor,ButtonBackColor,EditTextColor,EditBackColor,...
        FrameTextColor,FrameBackColor,FontName,FontUnits,FontWeight,FontAngle,...
        TitleTextFontSize,HeaderTextFontSize,BodyTextFontSize,Body2TextFontSize,...
        SmallTextFontSize,ButtonFontSize,SmallButtonFontSize,...
        StartFigWidth,StartFigHt,OutputFigWidth,OutputFigHt]=lfosr_fontscolors;

    figLeft       = 132;
    figBottom     = 48;
    figWidth      = StartFigWidth;
    figHt         = StartFigHt;

    center        = 0.5;
    spacing1      = 0.07;
    spacing2      = 0.015;
    spacing3      = 0.0001;
    marginleft    = 0.086;

    txtWidth      = 0.22;
    txtHt         = 0.04;
    bigtxtHt      = 0.05;

    buttonBottom  = 0.07;
    buttonWidth   = 0.17;
    buttonHt      = 0.06;

    editWidth     = 0.10;
    editHt        = 0.06;

    radioWidth    = 0.20;
    radioHt       = 0.04;

    %%%%%%%%%%%%%%%%% PROGRAM INPUT CONTROL %%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %path and name of file plus Text Extension
    f_location_home = which('film_defaults.txt');
    f_location_default = fullfile(path,'common_files','film_defaults.txt');

    %
    % This code allows for multi-user systems where default files are in specific
    %  user files that are in the matlab path above LFOSR files.
    %
    if ~strcmp(f_location_home,f_location_default)
        f_location=f_location_home;
    else
        f_location=f_location_default;
    end

    fid        = fopen(f_location,'r');
    if fid==-1 %check for error on open
        error('Unable to open file.')
    end
    %
    Structure_file_location   = fgetl(fid);
    Start_lambdasweep_default = str2double(fgetl(fid));
    Stop_lambdasweep_default  = str2double(fgetl(fid));
    Start_thetasweep_default  = str2double(fgetl(fid));
    Stop_thetasweep_default   = str2double(fgetl(fid));
    Start_layersweep_default  = str2double(fgetl(fid));
    Stop_layersweep_default   = str2double(fgetl(fid));
    Points_value_default      = str2double(fgetl(fid));
    Angle_value_default       = str2double(fgetl(fid));
    Wavelength_value_default  = str2double(fgetl(fid));
    Layer_value_default       = str2double(fgetl(fid));
    Length_value_default      = str2double(fgetl(fid));
    %
    Lambda_default            = str2double(fgetl(fid));
    Theta_default             = str2double(fgetl(fid));
    A_Length_default          = str2double(fgetl(fid));
    %
    Slider_Bar_default        = str2double(fgetl(fid));
    Percentage_Length_default = str2double(fgetl(fid));
    Timedebug_default         = str2double(fgetl(fid));
    %
    fclose(fid);
    %
    sweep_choice = 100*Lambda_default+10*Theta_default+1*A_Length_default;

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    handle = figure('Color',StartFigBackColor, ...
        'Name',['LFOSR FilmCalc v',num2str(LFOSRVersion)],...
        'NumberTitle','off',...
        'Menubar','none',...
        'Position',[figLeft figBottom figWidth figHt],...
        'Tag','FILM','Visible','off','Pointer','watch');


    if versionnumber<5.3
        set(handle,'HandleVisibility','callback')
    elseif versionnumber>=5.3&&versionnumber<6.0
        set(handle,'HandleVisibility','callback','HitTest','off')
    elseif versionnumber>=6.0&&versionnumber<6.5
        set(handle,'HandleVisibility','callback')
    elseif versionnumber>=6.5
        set(handle,'Resize','off')  %didn't work in WinXP in previous versions
    end
    %%%%%%%%%%%%%%%%%%%%%%%%%%% Headings %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%% Title %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',TitleTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','center', ...
        'Position',[0 .93 1 bigtxtHt], ...
        'String','Layered Film Optical Simulation Routine', ...
        'Style','text');
    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',TitleTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','center', ...
        'Position',[0 .88 1 bigtxtHt], ...
        'String',['Film Calculation - Version ',num2str(LFOSRVersion)], ...
        'Style','text');
    %%%%%%%%%%%% Headings %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',BodyTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft .803 .28 bigtxtHt], ...
        'String','Choose Structure File', ...
        'Style','text');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',BodyTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft .526 .28 bigtxtHt], ...
        'String','Choose Sweep Variable', ...
        'Style','text');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',BodyTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.07 .276 .28 bigtxtHt], ...
        'String','Choose Layer', ...
        'Style','text');
    
    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',BodyTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft .276 .24 bigtxtHt], ...
        'String','Program Information', ...
        'Style','text');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',SmallTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','center', ...
        'Position',[.35 .485 .3 txtHt], ...
        'String','(All lengths given in nanometers!)', ...
        'Style','text');

    Percentage_Length = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.10+2*(radioWidth+spacing3) .485 1.6*radioWidth radioHt], ...
        'String','Length by %', ...
        'Value',Percentage_Length_default,...
        'Style','checkbox', ...
        'Tag','Film_Percentage_Length');

    userselect_h2 = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',SmallTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','center', ...
        'Position',[0 0.01 1 txtHt], ...
        'Style','text', ...
        'String',['User Run Option - ',upper(user_selection)],...
        'Tag','Film_User_selection');
    if user_run
        set(userselect_h2,'Visible','on');
    else
        set(userselect_h2,'Visible','off');
    end

    %%%%%%%%%%% Sweep Variable %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    Lambda = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.10 .529 radioWidth radioHt], ...
        'String','Lambda', ...
        'Value',Lambda_default,...
        'Style','radiobutton', ...
        'Tag','Film_Lambda');

    Theta = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.10+(radioWidth+spacing3) .529 radioWidth radioHt], ...
        'String','Theta', ...
        'Value',Theta_default,...
        'Style','radiobutton', ...
        'Tag','Film_Theta');

    A_Length = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.10+2*(radioWidth+spacing3) .529 radioWidth radioHt], ...
        'String','Layer Thickness', ...
        'Value',A_Length_default,...
        'Style','radiobutton', ...
        'Tag','Film_A_Length');

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft .38+editHt txtWidth txtHt], ...
        'String','Start Value', ...
        'Style','text');
    Start = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft .38 editWidth editHt], ...
        'Style','edit', ...
        'Tag','Film_Start');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+1*(editWidth+spacing1) .38+editHt txtWidth txtHt], ...
        'String','End Value', ...
        'Style','text');
    Stop = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+1*(editWidth+spacing1) .38 editWidth editHt], ...
        'Style','edit', ...
        'Tag','Film_Stop');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+2*(editWidth+spacing1) .38+editHt txtWidth txtHt], ...
        'String','Data Points', ...
        'Style','text');
    uicontrol('Parent',handle, ...  %Points = 
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+2*(editWidth+spacing1) .38 editWidth editHt], ...
        'Style','edit', ...
        'String',Points_value_default,...
        'Tag','Film_Points');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+3*(editWidth+spacing1) .38+editHt txtWidth txtHt], ...
        'String','Incident Angle',...
        'Style','text');
    Angle = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+3*(editWidth+spacing1) .38 editWidth editHt], ...
        'Style','edit', ...
        'String',Angle_value_default,...
        'Tag','Film_Angle');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+4*(editWidth+spacing1) .38+editHt txtWidth txtHt], ...
        'String','Incident Wavelength',...
        'Style','text');
    Wavelength = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft+4*(editWidth+spacing1) .38 editWidth editHt], ...
        'Style','edit', ...
        'String',Wavelength_value_default,...
        'Tag','Film_Wavelength');

    Length_text = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.07+txtWidth .276-(txtHt+spacing2) txtWidth+.05 txtHt], ...
        'String','Length Layer Number', ...
        'Style','text');
    Length = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.07+txtWidth .276-(editHt+spacing2+txtHt) editWidth editHt], ...
        'Style','edit', ...
        'String',Length_value_default,...
        'Tag','Film_Length');

    Layer_text = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.07 .276-(txtHt+spacing2) txtWidth txtHt], ...
        'String','Layer Number',...
        'Style','text');
    Layer = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center-.07 .276-(editHt+spacing2+txtHt) editWidth editHt], ...
        'Style','edit', ...
        'String',Layer_value_default,...
        'Tag','Film_Layer');

    if strcmpi(user_selection,'biosensor')
        set(Layer_text,'String','Bio Layer Number')
        set(Length,'Enable','off')
    elseif strcmpi(user_selection,'textured')
        set(Length_text,'String','Textured Layer Number')
        set(Length,'Enable','on')
    else
        set(Length,'Enable','off')
    end

    %              1      2     3        4     5    6     7          8
    %   9      10
    %   11                       12
    %   13                       14
    %   15             Lambda          16
    Radio_Handles={Lambda Theta A_Length Start Stop Angle Wavelength Layer ...
        Length Percentage_Length Start_lambdasweep_default Stop_lambdasweep_default ...
        Start_thetasweep_default Stop_thetasweep_default ...
        Start_layersweep_default Stop_layersweep_default};

    switch sweep_choice
        case 100 %lambda sweep
            lfosr_guivalues(handle,Lambda,Radio_Handles)
        case 10 %theta sweep
            lfosr_guivalues(handle,Theta,Radio_Handles)
        case 1 %layer sweep
            lfosr_guivalues(handle,A_Length,Radio_Handles)
    end

    set(  Lambda,'UserData',Radio_Handles)
    set(   Theta,'UserData',Radio_Handles)
    set(A_Length,'UserData',Radio_Handles)

    set(  Lambda,'CallBack','lfosr_guivalues(gcbf,gcbo,get(gcbo,''Userdata''))')
    set(   Theta,'CallBack','lfosr_guivalues(gcbf,gcbo,get(gcbo,''Userdata''))')
    set(A_Length,'CallBack','lfosr_guivalues(gcbf,gcbo,get(gcbo,''Userdata''))')

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    %%%%%%%% Structure File %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    default = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center .806 1.4*radioWidth radioHt], ...
        'String','Default Structure File', ...
        'Style','radiobutton');

    no_default = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center .730 1.4*radioWidth radioHt], ...
        'String','Select Structure File', ...
        'Style','radiobutton');

    Path = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',EditBackColor, ...
        'ForegroundColor',EditTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',HeaderTextFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[center .635 .417 buttonHt], ...
        'String',Structure_file_location, ...
        'Style','edit', ...
        'Tag','Film_Path');

    Edit_structure = uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',ButtonBackColor, ...
        'ForegroundColor',ButtonTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'Position',[marginleft .635 1.5*buttonWidth buttonHt], ...
        'String','Edit Structure File');

    if strcmp(Structure_file_location,'structure.txt')
        set(default,'Value',1)
        set(no_default,'Value',0)
    else
        set(default,'Value',0)
        set(no_default,'Value',1)
    end

    set(       default,'UserData',[default no_default Path Edit_structure])
    set(    no_default,'UserData',[default no_default Path Edit_structure])
    set(          Path,'UserData',[default no_default Path Edit_structure])
    set(Edit_structure,'UserData',[default no_default Path Edit_structure])

    set(       default,'CallBack','structure_select(gcbo,get(gcbo,''UserData''))')
    set(    no_default,'CallBack','structure_select(gcbo,get(gcbo,''UserData''))')
    set(          Path,'CallBack','structure_select(gcbo,get(gcbo,''UserData''))')
    set(Edit_structure,'CallBack','structure_select(gcbo,get(gcbo,''UserData''))')

    %%%%%%%%%% Output Graphs %%%%%%%%%%%%%%%%%%%%%%%%%%%%
    uicontrol('Parent',handle, ...  %Slider_Bar = 
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft .276-(radioHt+spacing2) 1.6*radioWidth radioHt], ...
        'String','Show Thickness Slider Bar', ...
        'Value',Slider_Bar_default,...
        'Style','checkbox', ...
        'Tag','Film_Slider_Bar');
    %if user_run
    %    set(Slider_Bar,'Visible','off');
    %else
    %    set(Slider_Bar,'Visible','on');
    %end

    uicontrol('Parent',handle, ...  %Timedebug = 
        'Units','normalized', ...
        'BackgroundColor',StartFigBackColor, ...
        'ForegroundColor',StartFigTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'HorizontalAlignment','left', ...
        'Position',[marginleft .276-2*(radioHt+spacing2) 1.6*radioWidth radioHt], ...
        'String','Show Program Time Information', ...
        'Value',Timedebug_default,...
        'Style','checkbox', ...
        'Tag','Film_Timedebug');

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',ButtonBackColor, ...
        'ForegroundColor',ButtonTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'Position',[center-2*(buttonWidth+2*spacing2)-buttonWidth/2 buttonBottom buttonWidth buttonHt], ...
        'String','Start',...
        'Callback','film(''run'')');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',ButtonBackColor, ...
        'ForegroundColor',ButtonTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'Position',[center-1*(buttonWidth+2*spacing2)-buttonWidth/2 buttonBottom buttonWidth buttonHt], ...
        'String','Web Help', ...
        'Callback','film(''web'')');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',ButtonBackColor, ...
        'ForegroundColor',ButtonTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'Position',[center-0*(buttonWidth+2*spacing2)-buttonWidth/2 buttonBottom buttonWidth buttonHt], ...
        'String','Check Version', ...
        'Callback','film(''version'')');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',ButtonBackColor, ...
        'ForegroundColor',ButtonTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'Position',[center-0*(buttonWidth+2*spacing2)+buttonWidth/2+2*spacing2 buttonBottom buttonWidth buttonHt], ...
        'String','Save Settings', ...
        'Callback','film(''save'')');

    uicontrol('Parent',handle, ...
        'Units','normalized', ...
        'BackgroundColor',ButtonBackColor, ...
        'ForegroundColor',ButtonTextColor,...
        'FontName',FontName,...
        'FontUnits',FontUnits,...
        'FontSize',ButtonFontSize, ...
        'FontWeight',FontWeight,...
        'FontAngle',FontAngle,...
        'Position',[center+1*(buttonWidth+2*spacing2)+buttonWidth/2+2*spacing2,...
        buttonBottom buttonWidth buttonHt], ...
        'String','Close', ...
        'Callback','film(''close'')');

    set(handle,'Visible','on','Pointer','arrow')
    drawnow;
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%% END INITIALIZE PROGRAM INTERFACE %%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%% RUN PROGRAM FILM ROUTINE %%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
elseif strcmp(action,'run')
    %clc  %clear command window
    disp(' ')
    wait_bar = waitbar(0,'Please wait...'); %start wait bar for user info

    %
    %find parameters for program execution
    %
    Start_tag             = findobj(gcbf,'Tag','Film_Start');
    Stop_tag              = findobj(gcbf,'Tag','Film_Stop');
    Points_tag            = findobj(gcbf,'Tag','Film_Points');
    Theta_tag             = findobj(gcbf,'Tag','Film_Theta');
    Lambda_tag            = findobj(gcbf,'Tag','Film_Lambda');
    A_Length_tag          = findobj(gcbf,'Tag','Film_A_Length');
    Path_tag              = findobj(gcbf,'Tag','Film_Path');
    Angle_tag             = findobj(gcbf,'Tag','Film_Angle');
    Wavelength_tag        = findobj(gcbf,'Tag','Film_Wavelength');
    Layer_tag             = findobj(gcbf,'Tag','Film_Layer');
    Length_tag            = findobj(gcbf,'Tag','Film_Length');
    Slider_Bar_tag        = findobj(gcbf,'Tag','Film_Slider_Bar');
    Percentage_Length_tag = findobj(gcbf,'Tag','Film_Percentage_Length');
    Timedebug_tag         = findobj(gcbf,'Tag','Film_Timedebug');
    User_selection_tag    = findobj(gcbf,'Tag','Film_User_selection');

    %
    %now that parameters are read turn off figure visibility to prevent
    % user intervention
    %
    handle_temp = gcf;
    set(handle_temp,'HandleVisibility','off')

    %
    %convert parameter strings into number values
    %
    Start      = str2double(get(Start_tag,'String'));
    Stop       = str2double(get(Stop_tag,'String'));
    Points     = str2double(get(Points_tag,'String'));
    Lambda     = get(Lambda_tag,'Value');
    Theta      = get(Theta_tag,'Value');
    A_Length   = get(A_Length_tag,'Value');
    Path       = get(Path_tag,'String');
    Angle      = str2double(get(Angle_tag,'String'));
    Wavelength = str2double(get(Wavelength_tag,'String'));
    Layer      = str2double(get(Layer_tag,'String'));
    Length     = str2double(get(Length_tag,'String'));
    Slider_Bar = get(Slider_Bar_tag,'Value');
    Percentage_Length=get(Percentage_Length_tag,'Value');
    Timedebug  = get(Timedebug_tag,'Value');
    User_selection  = strrep(get(User_selection_tag,'String'),...
        'User Run Option - ','');

    %
    %determine program execution sweep variable for x-axis
    %
    Sweep_Variable = 100*Lambda+10*Theta+1*A_Length;
    Line_suppress = 0; %turn off line suppression to display program execution info

    waitbar(1/5)

    %
    %run routine to acquire refractive index values as well as set up
    %lambda, theta, and thickness matricies
    %
    n_index_warning_alert = 1; %turn on wavelength range warnings

    if strcmp(Path,'structure.txt')
        Path=which('structure.txt');
    end

    [lambda,refractive_index,thickness,theta,error_lfosr_input] = lfosr_input(LFOSRVersion,...
        Start,Stop,Points,Angle,Wavelength,Layer,Length,Percentage_Length,Path,Sweep_Variable,Timedebug,...
        User_selection,n_index_warning_alert,Line_suppress);

    %
    %check for error in execution of setup routine stop execution if unsuccessful
    %
    if error_lfosr_input
        disp('Error returned by lfosr_input.m !!!')
        set(handle_temp,'HandleVisibility','callback')
        waitbar(5/5)
        close(wait_bar)
        return

        %
        %if successful continue on to R,T,P calculation
        %
    else
        waitbar(3/5)


        %
        %run R,T,P calculation
        %
        if strcmpi(User_selection,'specphoto')
            [RR,TT,PP,error_film_calculation] = spectral_filter(lambda,theta,thickness,...
                refractive_index,Layer,Sweep_Variable,Timedebug,Line_suppress);
        elseif strcmpi(User_selection,'propagation')
            [x_position_TE,lambda_position_TE,magnitude_E_TE,thickness_total,error_film_calculation]=propagation_calculation(lambda,theta,thickness,...
                refractive_index,2,Sweep_Variable,Timedebug,Line_suppress);
        elseif strcmpi(User_selection,'textured')
            
            RR_metal(1,:)=lambda;
            if 1==0
                % Ag Reflectance
                RR_metal_tmp=load('C:\Users\memsley117715\Documents\MATLAB\Reflectance Data\AgonSi-0degree_ref.txt');
                RR_metal(2,:)=interp1(RR_metal_tmp(:,1),RR_metal_tmp(:,2),lambda,'linear');
                RR_metal(3,:)=interp1(RR_metal_tmp(:,1),RR_metal_tmp(:,3),lambda,'linear');
            else
                % Perfect Reflector
                RR_metal(2,:)=ones(1,length(lambda));
                RR_metal(3,:)=ones(1,length(lambda));
            end
            
            if 1==0
                Textured_Angle=54.84;
                [RR_a,TT_a,PP_a,error_film_calculation] = film_calculation(lambda,theta,thickness,...
                    refractive_index,Layer,Length,Sweep_Variable,Timedebug,Line_suppress,User_selection);
                
                [RR_b,TT_b,PP_b,error_film_calculation] = film_calculation(lambda,theta+Textured_Angle,thickness,...
                    refractive_index,Layer,Length,Sweep_Variable,Timedebug,Line_suppress,User_selection);
                
                [RR_c,TT_c,PP_c,error_film_calculation] = film_calculation(lambda,180-3*Textured_Angle-theta,thickness,...
                    refractive_index,Layer,Length,Sweep_Variable,Timedebug,Line_suppress,User_selection);
            else
                Textured_Angle=54.84;
                [RR_a,TT_a,PP_a,error_film_calculation] = film_calculation(lambda,54.7,thickness,...
                    refractive_index,Layer,Length,Sweep_Variable,Timedebug,Line_suppress,User_selection);
                
                [RR_b,TT_b,PP_b,error_film_calculation] = film_calculation(lambda,15.8,thickness,...
                    refractive_index,Layer,Length,Sweep_Variable,Timedebug,Line_suppress,User_selection);
                
                [RR_c,TT_c,PP_c,error_film_calculation] = film_calculation(lambda,78.9,thickness,...
                    refractive_index,Layer,Length,Sweep_Variable,Timedebug,Line_suppress,User_selection);

                [RR_d,TT_d,PP_d,error_film_calculation] = film_calculation(lambda,33.5,thickness,...
                    refractive_index,Layer,Length,Sweep_Variable,Timedebug,Line_suppress,User_selection);

                [RR_e,TT_e,PP_e,error_film_calculation] = film_calculation(lambda,71.3,thickness,...
                    refractive_index,Layer,Length,Sweep_Variable,Timedebug,Line_suppress,User_selection);

                [RR_f,TT_f,PP_f,error_film_calculation] = film_calculation(lambda,51.7,thickness,...
                    refractive_index,Layer,Length,Sweep_Variable,Timedebug,Line_suppress,User_selection);

                [RR_g,TT_g,PP_g,error_film_calculation] = film_calculation(lambda,86.3,thickness,...
                    refractive_index,Layer,Length,Sweep_Variable,Timedebug,Line_suppress,User_selection);

                [RR_h,TT_h,PP_h,error_film_calculation] = film_calculation(lambda,88.8,thickness,...
                    refractive_index,Layer,Length,Sweep_Variable,Timedebug,Line_suppress,User_selection);

                [RR_i,TT_i,PP_i,error_film_calculation] = film_calculation(lambda,52.7,thickness,...
                    refractive_index,Layer,Length,Sweep_Variable,Timedebug,Line_suppress,User_selection);

            end
            T=3;
            Tf=0.0*T;

            Metal_Coverage=.038;
            Non_Metal_Coverage=1-Metal_Coverage;

            if 1==0
                display('Metal lines ON')
                RR(1,:)=RR_a(1,:);
                RR(2,:)=Metal_Coverage.*(RR_metal(2,:)/2+RR_metal(3,:)/2)+...
                    Non_Metal_Coverage.*((Tf/T)*(RR_a(2,:)/2+RR_a(3,:)/2)+(1-Tf/T)*(RR_b(2,:).*RR_c(2,:)./2.+RR_b(3,:).*RR_c(3,:)./2));
                RR(3,:)=RR(2,:);
                
                TT(1,:)=TT_a(1,:);
                TT(2,:)=Metal_Coverage.*(0)+...
                    Non_Metal_Coverage.*((Tf/T)*(TT_a(2,:)/2+TT_a(3,:)/2)+(1-Tf/T)*(TT_b(2,:)/2+TT_b(3,:)/2+...
                    RR_b(2,:).*TT_c(2,:)./2.+RR_b(3,:).*TT_c(3,:)./2));
                TT(3,:)=TT(2,:);
            else
                if 1==0
                    display('Metal lines OFF')
                    RR(1,:)=RR_a(1,:);
                    RR(2,:)=((Tf/T)*(RR_a(2,:)/2+RR_a(3,:)/2)+...
                        (1-Tf/T)*(RR_b(2,:).*RR_c(2,:)./2.+RR_b(3,:).*RR_c(3,:)./2));
                    RR(3,:)=RR(2,:);
                    
                    TT(1,:)=TT_a(1,:);
                    TT(2,:)=((Tf/T)*(TT_a(2,:)/2+TT_a(3,:)/2)+(1-Tf/T)*(TT_b(2,:)/2+TT_b(3,:)/2+...
                        RR_b(2,:).*TT_c(2,:)./2.+RR_b(3,:).*TT_c(3,:)./2));
                    TT(3,:)=TT(2,:);
                    
                else
                    RR(1,:)=RR_a(1,:);
                    RR(2,:)=0.6834.*(RR_a(2,:).*RR_b(2,:)./2+RR_a(3,:).*RR_b(3,:)./2)+...
                        0.1860.*(RR_a(2,:).*RR_c(2,:).*RR_d(2,:)./2+RR_a(3,:).*RR_c(3,:).*RR_d(3,:)./2)+...
                        0.0583.*(RR_a(2,:).*RR_c(2,:).*RR_e(2,:).*RR_f(2,:)./2+RR_a(3,:).*RR_c(3,:).*RR_e(3,:).*RR_f(3,:)./2)+...
                        0.0374.*(RR_a(2,:).*RR_c(2,:).*RR_e(2,:)./2+RR_a(3,:).*RR_c(3,:).*RR_e(3,:)./2)+...
                        0.0324.*(RR_a(2,:).*RR_b(2,:).*RR_g(2,:)./2+RR_a(3,:).*RR_b(3,:).*RR_g(3,:)./2)+...
                        0.0014.*(RR_a(2,:).*RR_c(2,:).*RR_e(2,:).*RR_h(2,:).*RR_i(2,:)./2+RR_a(3,:).*RR_c(3,:).*RR_e(3,:).*RR_h(3,:).*RR_i(3,:)./2)+...
                        0.0010.*(RR_a(2,:).*RR_c(2,:).*RR_e(2,:).*RR_h(2,:)./2+RR_a(3,:).*RR_c(3,:).*RR_e(3,:).*RR_h(3,:)./2);
                    RR(3,:)=RR(2,:);
                    
                    TT(1,:)=TT_a(1,:);
                    TT(2,:)=((Tf/T)*(TT_a(2,:)/2+TT_a(3,:)/2)+(1-Tf/T)*(TT_b(2,:)/2+TT_b(3,:)/2+...
                        RR_b(2,:).*TT_c(2,:)./2.+RR_b(3,:).*TT_c(3,:)./2));
                    TT(3,:)=TT(2,:);
                end
            end
            
            %
            % Longwavelength filter for inteference fringes lost by
            % spectral measurement
            %
            if 1==0
                ave_points_buffer=find(RR(1,:)>500 & RR(1,:)<700);
                ave_points_forfilter=find(RR(1,:)>500);
                
                filterlength=length(ave_points_forfilter)-length(ave_points_buffer);
                
                a_filt = 1;
                windowSize = round(filterlength/3);
                b_filt=ones(1,windowSize)/windowSize;

                RR_temp2=RR(2,ave_points_buffer);
                RR_temp3=RR(3,ave_points_buffer);
                
                RR(2,ave_points_forfilter)=filter(b_filt,a_filt,RR(2,ave_points_forfilter));
                RR(3,ave_points_forfilter)=filter(b_filt,a_filt,RR(3,ave_points_forfilter));

                RR(2,ave_points_buffer)=RR_temp2;
                RR(3,ave_points_buffer)=RR_temp3;
            end

            PP=PP_a;
        else
            [RR,TT,PP,error_film_calculation] = film_calculation(lambda,theta,thickness,...
                refractive_index,Layer,Length,Sweep_Variable,Timedebug,Line_suppress,User_selection);
        end

        %
        % User selected run option for Yunjie Tong and Anna Swan for calculating
        %  florescent power above reflecting layer
        %
        if strcmpi(User_selection,'power')
            Power_TM=(abs(1+RR(2,:).*exp(i.*PP(2,:)))).^2;
            Power_TE=(abs(1+RR(3,:).*exp(i.*PP(3,:)))).^2;
            switch Sweep_Variable
                case 100
                    Answer_Matrix = [lambda';Power_TM;Power_TE];
                case 010
                    Answer_Matrix = [theta';Power_TM;Power_TE];
                case 001
                    Answer_Matrix = [thickness(:,Layer)';Power_TM;Power_TE];
            end

        end

        if strcmpi(User_selection,'nonpolarized')
            RR(2,:)=RR(2,:)/2+RR(3,:)/2;
            RR(3,:)=RR(2,:);
            
        end



        if strcmpi(User_selection,'max')
            [R_tm,I_tm]=max(RR(2,:));
            [R_te,I_te]=max(RR(3,:));
            [R_tm_m,I_tm_m]=min(RR(2,:));
            [R_te_m,I_te_m]=min(RR(3,:));
            disp(' ')
            disp(['Maximum TM Reflectivity = ',num2str(R_tm,'%16.15e'),' @ ',num2str(RR(1,I_tm)),'nm'])
            disp(['Minimum TM Reflectivity = ',num2str(R_tm_m,'%16.15e'),' @ ',num2str(RR(1,I_tm_m)),'nm'])
            disp(' ')
            disp(['Maximum TE Reflectivity = ',num2str(R_te,'%16.15e'),' @ ',num2str(RR(1,I_te)),'nm'])
            disp(['Minimum TE Reflectivity = ',num2str(R_te_m,'%16.15e'),' @ ',num2str(RR(1,I_te_m)),'nm'])
            disp(' ')
        end
        if strcmpi(User_selection,'biosensor')
            [T_tm,I_tm]=max(TT(2,:));
            [T_te,I_te]=max(TT(3,:));
            disp(' ')
            disp(['Maximum TM Transmission = ',num2str(T_tm,'%4.3e'),' @ ',num2str(RR(1,I_tm)),'nm'])
            disp(' ')
            disp(['Maximum TE Transmission = ',num2str(T_te,'%4.3e'),' @ ',num2str(RR(1,I_te)),'nm'])
            disp(' ')
        end
        if strcmpi(User_selection,'area')
            R_tm=cumtrapz(RR(1,:),RR(2,:));
            R_te=cumtrapz(RR(1,:),RR(3,:));
            T_tm=cumtrapz(TT(1,:),TT(2,:));
            T_te=cumtrapz(TT(1,:),TT(3,:));
            disp(' ')
            disp(['Total TM Reflected = ',num2str(R_tm(end)*100/(RR(1,end)-RR(1,1))),' %'])
            disp(['Total TE Reflected = ',num2str(R_te(end)*100/(RR(1,end)-RR(1,1))),' %'])
            disp(' ')
            disp(['Total TM Transmitted = ',num2str(T_tm(end)*100/(TT(1,end)-TT(1,1))),' %'])
            disp(['Total TE Transmitted = ',num2str(T_te(end)*100/(TT(1,end)-TT(1,1))),' %'])
            disp(' ')
            disp(['Total TM Absorbed = ',num2str((100*(RR(1,end)-RR(1,1))-R_tm(end)*100-T_tm(end)*100)/(RR(1,end)-RR(1,1))),' %'])
            disp(['Total TE Absorbed = ',num2str((100*(RR(1,end)-RR(1,1))-R_te(end)*100-T_te(end)*100)/(RR(1,end)-RR(1,1))),' %'])
        end

        %
        % check for error in execution of setup routine stop execution if unsuccessful
        %
        if error_film_calculation
            disp('Error returned by film_calculation.m !!!')
            set(handle_temp,'HandleVisibility','callback')
            waitbar(5/5)
            close(wait_bar)
            return

            %
            % if successful continue on to plot output
            %
        else
            waitbar(4/5)

            if strcmpi(User_selection,'none')||strcmpi(User_selection,'max')||...
                    strcmpi(User_selection,'biosensor')||...
                    strcmpi(User_selection,'specphoto')||...
                    strcmpi(User_selection,'area')
                Answer_Matrix = [RR;TT;PP];
                lfosr_output(gcbf,LFOSRVersion,Path,lambda,theta,thickness,refractive_index,...
                    Answer_Matrix,Layer,Length,Percentage_Length,Sweep_Variable,Slider_Bar,Timedebug,User_selection,Line_suppress);
            elseif strcmpi(User_selection,'propagation')
                figure
                if Points==1
                    plot(x_position_TE,magnitude_E_TE)
                    for q=1:length(thickness_total)
                        h=line(repmat(thickness_total(q),size(0:.1:1)),0:.1:1);
                        set(h,'linestyle','-.','linewidth',3,'color','k')
                    end
                    %                    figure
                    %                    image(lambda_position_TE,x_position_TE,magnitude_E_TE.*(2^8-1))
                    %                    colormap(jet(2^8))
                else
                    size(lambda_position_TE)
                    size(x_position_TE)
                    size(magnitude_E_TE)
                    %magnitude_E_TE
                    image(lambda_position_TE,x_position_TE,real(magnitude_E_TE.*(2^8-1)))
                    colormap(jet(2^8))
                    for q=1:length(thickness_total)
                        h=line(lambda_position_TE,repmat(thickness_total(q),size(lambda_position_TE)),repmat(64,size(lambda_position_TE)));
                        set(h,'linestyle','-.','linewidth',3,'color','y')
                    end
                end
            else
                Answer_Matrix = [RR;TT;PP];
                lfosr_output(gcbf,LFOSRVersion,Path,lambda,theta,thickness,refractive_index,...
                    Answer_Matrix,Layer,Length,Percentage_Length,Sweep_Variable,Slider_Bar,Timedebug,User_selection,Line_suppress);
            end

            set(handle_temp,'HandleVisibility','callback')
            waitbar(5/5)
            close(wait_bar)
        end
    end


    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%% END RUN PROGRAM FILM ROUTINE %%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SAVE SETTINGS %%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
elseif strcmp(action,'save'),
    Structure_file_tag    = findobj(gcbf,'Tag','Film_Path');
    Start_tag             = findobj(gcbf,'Tag','Film_Start');
    Stop_tag              = findobj(gcbf,'Tag','Film_Stop');
    Points_tag            = findobj(gcbf,'Tag','Film_Points');
    Angle_tag             = findobj(gcbf,'Tag','Film_Angle');
    Wavelength_tag        = findobj(gcbf,'Tag','Film_Wavelength');
    Layer_tag             = findobj(gcbf,'Tag','Film_Layer');
    Length_tag            = findobj(gcbf,'Tag','Film_Length');
    Theta_tag             = findobj(gcbf,'Tag','Film_Theta');
    Lambda_tag            = findobj(gcbf,'Tag','Film_Lambda');
    A_Length_tag          = findobj(gcbf,'Tag','Film_A_Length');
    Slider_Bar_tag        = findobj(gcbf,'Tag','Film_Slider_Bar');
    Percentage_Length_tag = findobj(gcbf,'Tag','Film_Percentage_Length');
    Timedebug_tag         = findobj(gcbf,'Tag','Film_Timedebug');

    Structure_file_location = get(Structure_file_tag,'String');
    Start                   = str2double(get(Start_tag,'String'));
    Stop                    = str2double(get(Stop_tag,'String'));
    Points                  = str2double(get(Points_tag,'String'));
    Angle                   = str2double(get(Angle_tag,'String'));
    Wavelength              = str2double(get(Wavelength_tag,'String'));
    Layer                   = str2double(get(Layer_tag,'String'));
    Length                  = str2double(get(Length_tag,'String'));
    Lambda                  = get(Lambda_tag,'Value');
    Theta                   = get(Theta_tag,'Value');
    A_Length                = get(A_Length_tag,'Value');
    Slider_Bar              = get(Slider_Bar_tag,'Value');
    Percentage_Length       = get(Percentage_Length_tag,'Value');
    Timedebug               = get(Timedebug_tag,'Value');

    sweep_choice=100*Lambda+10*Theta+1*A_Length;

    [path,name,ext] = fileparts(which(mfilename));

    %path and name of file plus Text Extension
    f_location_home = which('film_defaults.txt');
    f_location_default = fullfile(path,'common_files','film_defaults.txt');

    %
    % This code allows for multi-user systems where default files are in specific
    %  user files that are in the matlab path above LFOSR files.
    %
    if ~strcmp(f_location_home,f_location_default)
        f_location=f_location_home;
    else
        f_location=f_location_default;
    end

    fid        = fopen(f_location,'r');
    if fid==-1 %check for error on open
        error('Unable to open file.')
    end
    fgetl(fid);  %line_temp                 = 
    Start_lambdasweep_default = str2double(fgetl(fid));
    Stop_lambdasweep_default  = str2double(fgetl(fid));
    Start_thetasweep_default  = str2double(fgetl(fid));
    Stop_thetasweep_default   = str2double(fgetl(fid));
    Start_layersweep_default  = str2double(fgetl(fid));
    Stop_layersweep_default   = str2double(fgetl(fid));
    Points_value_default      = str2double(fgetl(fid));
    Angle_value_default       = str2double(fgetl(fid));
    Wavelength_value_default  = str2double(fgetl(fid));
    Layer_value_default       = str2double(fgetl(fid));
    Length_value_default      = str2double(fgetl(fid));
    %
    Lambda_default            = str2double(fgetl(fid));
    Theta_default             = str2double(fgetl(fid));
    A_Length_default          = str2double(fgetl(fid));
    %
    Slider_Bar_default        = str2double(fgetl(fid));
    Percentage_Length_default = str2double(fgetl(fid));
    Timedebug_default         = str2double(fgetl(fid));
    %
    fclose(fid);
    %

    switch sweep_choice
        case 100 %lambda sweep
            Start_lambdasweep_default = Start;
            Stop_lambdasweep_default  = Stop;
            Points_value_default      = Points;
            Angle_value_default       = Angle;
        case 10 %theta sweep
            Start_thetasweep_default  = Start;
            Stop_thetasweep_default   = Stop;
            Points_value_default      = Points;
            Wavelength_value_default  = Wavelength;
        case 1 %layer sweep
            Start_layersweep_default  = Start;
            Stop_layersweep_default   = Stop;
            Points_value_default      = Points;
            Angle_value_default       = Angle;
            Wavelength_value_default  = Wavelength;
            Layer_value_default       = Layer;
            Length_value_default      = Length;
    end

    %
    Lambda_default            = Lambda;
    Theta_default             = Theta;
    A_Length_default          = A_Length;
    %
    Slider_Bar_default        = Slider_Bar;
    Percentage_Length_default = Percentage_Length;
    Timedebug_default         = Timedebug;

    %%%%%%%%%%%

    %path and name of file plus Text Extension
    fid        = fopen(f_location,'wt');
    if fid==-1 %check for error on open
        error('Unable to open file.')
    end
    fprintf(fid,'%s\n',Structure_file_location);
    fprintf(fid,'%s\n',num2str(Start_lambdasweep_default));
    fprintf(fid,'%s\n',num2str(Stop_lambdasweep_default));
    fprintf(fid,'%s\n',num2str(Start_thetasweep_default));
    fprintf(fid,'%s\n',num2str(Stop_thetasweep_default));
    fprintf(fid,'%s\n',num2str(Start_layersweep_default));
    fprintf(fid,'%s\n',num2str(Stop_layersweep_default));
    fprintf(fid,'%s\n',num2str(Points_value_default));
    fprintf(fid,'%s\n',num2str(Angle_value_default));
    fprintf(fid,'%s\n',num2str(Wavelength_value_default));
    fprintf(fid,'%s\n',num2str(Layer_value_default));
    fprintf(fid,'%s\n',num2str(Length_value_default));
    fprintf(fid,'%s\n',num2str(Lambda_default));
    fprintf(fid,'%s\n',num2str(Theta_default));
    fprintf(fid,'%s\n',num2str(A_Length_default));
    fprintf(fid,'%s\n',num2str(Slider_Bar_default));
    fprintf(fid,'%s\n',num2str(Percentage_Length_default));
    fprintf(fid,'%s\n',num2str(Timedebug_default));
    fclose(fid);
    disp('Settings saved successfully')

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%% END SAVE SETTINGS %%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%% HELP & CLOSE PROGRAM INTERFACE %%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
elseif strcmp(action,'web')
    if versionnumber<5.3
        web('http://www.mattemsley.com/LFOSR/');
    elseif versionnumber>=5.3 && versionnumber<6.0
        web('http://www.mattemsley.com/LFOSR/');
    elseif versionnumber>=6.0
        web('http://www.mattemsley.com/LFOSR/','-browser');
    end

elseif strcmp(action,'version')
    if versionnumber<5.3
        warndlg(['Function not available in Matlab v',num2str(versionnumber),'.  ',...
            'Please contact Matthew K. Emsley (memsley@bu.edu) to check for ',...
            'latest version.'],'Version Check')
    else
        [license_numbers,error_lfosr_license]=lfosr_license(LFOSRVersion);
    end

elseif strcmp(action,'info')
    helpwin(mfilename);

elseif strcmp(action,'close')
    close(gcf)
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%% END HELP & CLOSE PROGRAM INTERFACE %%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%% END FILM PROGRAM %%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
